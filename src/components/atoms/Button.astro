---
import { cn } from '@/utils/cn';

export interface Props {
  variant?: 'primary' | 'secondary' | 'outline' | 'ghost';
  size?: 'sm' | 'md' | 'lg';
  class?: string;
  href?: string;
  type?: 'button' | 'submit' | 'reset';
  disabled?: boolean;
  ariaLabel?: string; // AÃ±adimos aria-label
}

const { 
  variant = 'primary', 
  size = 'md', 
  class: className, 
  href, 
  type = 'button',
  disabled = false,
  ariaLabel
} = Astro.props;

const variants = {
  primary: 'bg-primary-600 text-white hover:bg-primary-700 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-primary-500',
  secondary: 'bg-secondary-600 text-white hover:bg-secondary-700 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-secondary-500',
  outline: 'border border-primary-600 text-primary-600 hover:bg-primary-50 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-primary-500',
  ghost: 'text-primary-600 hover:bg-primary-50 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 focus-visible:ring-primary-500',
};

const sizes = {
  sm: 'py-1 px-3 text-sm',
  md: 'py-2 px-4 text-base',
  lg: 'py-3 px-6 text-lg',
};

const buttonClasses = cn(
  'inline-flex items-center justify-center rounded-md font-medium transition-colors focus-visible:outline-none disabled:opacity-50 disabled:pointer-events-none',
  variants[variant],
  sizes[size],
  className
);
---

{href ? (
  <a 
    href={href} 
    class={buttonClasses}
    aria-label={ariaLabel}
    role="button"
    tabindex="0"
  >
    <slot />
  </a>
) : (
  <button 
    type={type} 
    class={buttonClasses} 
    disabled={disabled}
    aria-label={ariaLabel}
    tabindex="0"
  >
    <slot />
  </button>
)}