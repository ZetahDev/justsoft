---
export interface Props {
  animation: 'fadeIn' | 'slideUp' | 'slideIn' | 'scale' | 'stagger';
  delay?: number;
  duration?: number;
  class?: string;
  threshold?: number; // 0-1, porcentaje visible para animar
  staggerChildren?: string; // Selector para elementos en stagger
  staggerAmount?: number; // Tiempo entre animaciones en stagger
}

const { 
  animation, 
  delay = 0, 
  duration = 0.8, 
  class: className,
  threshold = 0.2,
  staggerChildren,
  staggerAmount = 0.1
} = Astro.props;
---

<div 
  class:list={['gsap-animated', className]} 
  data-animation={animation}
  data-delay={delay}
  data-duration={duration}
  data-threshold={threshold}
  data-stagger-children={staggerChildren}
  data-stagger-amount={staggerAmount}
>
  <slot />
</div>

<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';
  
  gsap.registerPlugin(ScrollTrigger);
  
  document.addEventListener('DOMContentLoaded', () => {
    const animatedElements = document.querySelectorAll('.gsap-animated');
    
    animatedElements.forEach(element => {
      const animation = element.getAttribute('data-animation');
      const delay = parseFloat(element.getAttribute('data-delay') || '0');
      const duration = parseFloat(element.getAttribute('data-duration') || '0.8');
      const threshold = parseFloat(element.getAttribute('data-threshold') || '0.2');
      const staggerChildren = element.getAttribute('data-stagger-children');
      const staggerAmount = parseFloat(element.getAttribute('data-stagger-amount') || '0.1');
      
      // Configuración inicial según el tipo de animación
      switch(animation) {
        case 'fadeIn':
          gsap.set(element, { opacity: 0 });
          break;
        case 'slideUp':
          gsap.set(element, { opacity: 0, y: 50 });
          break;
        case 'slideIn':
          gsap.set(element, { opacity: 0, x: -50 });
          break;
        case 'scale':
          gsap.set(element, { opacity: 0, scale: 0.8 });
          break;
        case 'stagger':
          if (staggerChildren) {
            const children = element.querySelectorAll(staggerChildren);
            gsap.set(children, { opacity: 0, y: 20 });
          }
          break;
      }
      
      // Crear la animación con ScrollTrigger
      ScrollTrigger.create({
        trigger: element,
        start: `top ${(1 - threshold) * 100}%`,
        onEnter: () => {
          switch(animation) {
            case 'fadeIn':
              gsap.to(element, { opacity: 1, duration, delay });
              break;
            case 'slideUp':
              gsap.to(element, { opacity: 1, y: 0, duration, delay });
              break;
            case 'slideIn':
              gsap.to(element, { opacity: 1, x: 0, duration, delay });
              break;
            case 'scale':
              gsap.to(element, { opacity: 1, scale: 1, duration, delay });
              break;
            case 'stagger':
              if (staggerChildren) {
                const children = element.querySelectorAll(staggerChildren);
                gsap.to(children, { 
                  opacity: 1, 
                  y: 0, 
                  duration, 
                  delay, 
                  stagger: staggerAmount 
                });
              }
              break;
          }
        },
        once: true
      });
    });
  });
</script>